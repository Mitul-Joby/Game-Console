#include "LedControl.h"

int CLK = 8;
int CS = 9;
int DIN = 10;
int devices = 4;

LedControl LC = LedControl(DIN, CLK, CS, devices);

void setup()
{
    for (int address = 0; address < devices; address++)
    {
        LC.shutdown(address, false);
        LC.setIntensity(address, 1);
        LC.clearDisplay(address);
    }
    // int matrix[4][8][8] =
    //     {{{0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 1, 1, 0, 0, 0},
    //       {0, 1, 1, 1, 1, 0, 0, 0}},
    //      {{0, 1, 1, 0, 0, 1, 0, 0},
    //       {0, 1, 1, 0, 1, 1, 0, 0},
    //       {0, 1, 1, 1, 1, 0, 0, 0},
    //       {0, 1, 1, 1, 0, 0, 0, 0},
    //       {0, 1, 1, 1, 1, 0, 0, 0},
    //       {0, 1, 1, 0, 1, 1, 0, 0},
    //       {0, 1, 1, 0, 0, 1, 1, 0},
    //       {0, 1, 1, 0, 0, 0, 1, 0}},
    //      {{0, 0, 1, 1, 1, 1, 0, 0},
    //       {0, 1, 1, 1, 1, 1, 0, 0},
    //       {0, 1, 0, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 1, 1, 1, 0, 0},
    //       {0, 1, 1, 1, 1, 1, 0, 0},
    //       {0, 0, 0, 0, 1, 1, 0, 0},
    //       {0, 1, 1, 1, 1, 1, 0, 0},
    //       {0, 1, 1, 1, 1, 0, 0, 0}},
    //      {{0, 0, 1, 1, 1, 1, 0, 0},
    //       {0, 1, 1, 1, 1, 1, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 0, 0, 0, 0, 0},
    //       {0, 1, 1, 1, 1, 1, 0, 0},
    //       {0, 0, 1, 1, 1, 1, 0, 0}}};

    // for (int addr = 0; addr < 4; addr++)
    // {
    //     for (int x = 0; x < 8; x++)
    //     {
    //         int sum = 0;
    //         for (int y = 0; y < 8; y++)
    //         {
    //             sum = sum << 1;
    //             sum = sum ^ matrix[addr][x][y];
    //         }
    //         lc.setRow(addr, x, sum);
    //     }
    // }

    int matrix[8][32] = {{1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                         {1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                         {1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                         {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                         {1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                         {1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0},
                         {1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0},
                         {1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0}};

    for (int y = 0; y < 8; y++)
    {
        int disp = 3, sum = 0;
        int bin = 7;
        for (int x = 31; x >= 0; x--)
        {
            sum = sum << 1;
            sum = sum ^ matrix[7 - y][x];
            bin--;
            if (bin == -1)
            {
                LC.setRow(disp, y, sum);
                sum = 0;
                bin = 7;
                disp--;
            }
        }
    }
}

void loop()
{
}
